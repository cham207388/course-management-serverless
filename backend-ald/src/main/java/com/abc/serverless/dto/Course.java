package com.abc.serverless.dto;

import jakarta.validation.constraints.DecimalMax;
import jakarta.validation.constraints.DecimalMin;
import jakarta.validation.constraints.Future;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import lombok.AllArgsConstructor;
import lombok.NoArgsConstructor;
import lombok.Setter;
import software.amazon.awssdk.enhanced.dynamodb.extensions.annotations.DynamoDbAutoGeneratedUuid;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.*;

import java.time.LocalDateTime;

@NoArgsConstructor
@AllArgsConstructor
@DynamoDbBean
@Setter
public class Course {

    private String id;

    @NotBlank(message = "Name is required")
    private String name;

    @NotBlank(message = "Domain is required")
    private String domain;

    @NotBlank(message = "Level is required: BEGINNER, INTERMEDIATE, ADVANCE")
    private String level;

    @NotNull(message = "Price is required")
    @DecimalMin(value = "0.0", inclusive = false, message = "Price must be greater than 0")
    private Double price;

    @NotNull(message = "Start date is required")
    @Future(message = "Start date must be in the future")
    private LocalDateTime startDate;

    @NotNull(message = "End date is required")
    @Future(message = "End date must be in the future")
    private LocalDateTime endDate;

    @DecimalMin(value = "0.0", message = "Score must be at least 0")
    @DecimalMax(value = "100.0", message = "Score must be at most 100")
    private Double score;

    @DynamoDbPartitionKey
    @DynamoDbAutoGeneratedUuid
    public String getId() {
        return id;
    }

    @DynamoDbAttribute("name")
    public String getName() {
        return name;
    }

    @DynamoDbAttribute("level")
    public String getLevel() {
        return level;
    }

    @DynamoDbAttribute("domain")
    public String getDomain() {
        return domain;
    }

    @DynamoDbAttribute("price")
    public Double getPrice() {
        return price;
    }

    @DynamoDbAttribute("startDate")
    public LocalDateTime getStartDate() {
        return startDate;
    }

    @DynamoDbAttribute("endDate")
    public LocalDateTime getEndDate() {
        return endDate;
    }

    @DynamoDbAttribute("score")
    public Double getScore() {
        return score;
    }
}